import "CFG.py";
import * as name from "CYK.py";
import CFG from "test.txt";
import {CFG} from "CFG.py";
import {CFG, CNF, CYK, Parse} from "CFG.py";
import { export1 as alias1 } from "module-name";
import { export1 as alias1, export2 as alias2 } from "module-name";
import { export1 as alias1, export2 as alias2, export3 } from "module-name";
import { default as alias } from "module-name";
import { "string name" as alias } from "module-name";
import defaultExport, { export1, export2 } from "module-name";
import defaultExport, * as name from "module-name";
export let name1, name2;
export let name;
export var name1, name2;
export const name1, name2;
export const name1 = 1, name2 = 2;
export let name1 = 1, name2 = 2;
export var name1 = 1, name2 = 2;
export function functionName();
export function* generatorFunctionName();
export const { name1, name2: bar } = o;
export const [ name1, name2 ] = array;
export { name1, nameN };
export { variable1 as name1, variable2 as name2, nameN as default };
export { variable1 as "string name" };
export default expression;
export default function functionName();
export default function* generatorFunctionName();
export * from "module-name";
export * as name1 from "module-name";
export { name1, nameN } from "module-name";
export { import1 as name1, import2 as name2, nameN, default } from "module-name";
if(){}

