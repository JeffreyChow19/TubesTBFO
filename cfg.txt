EQUAL -> equal
ISEQ -> iseq
LB -> lb
RB -> rb
COLON -> colon
ADD -> add
SUBTR -> subtr
MUL -> mul
DIV -> div
LE -> le
L -> l
MOD -> mod
GE -> ge
G -> g
NEQ -> neq
SUBTREQ -> subtreq
MULEQ -> muleq
SUMEQ -> sumeq
DIVEQ -> diveq
AND -> and
OR -> or
NOT -> not
IF -> if
THEN -> then
ELSE -> else
ELIF -> elif
WHILE -> while
RANGE -> range
FALSE -> false
TRUE -> true
NONE -> none
BREAK -> break
AS -> as
CLASS -> class
CONTINUE -> continue
DEF -> def
FOR -> for
FROM -> from
IMPORT -> import
IN -> in
IS -> is
RETURN -> return
RAISE -> raise
PASS -> pass
WITH -> with
COMMA -> comma
DOTBETWEEN -> dotbetween
DOT -> dot
LSB -> lsb
RSB -> rsb
LCB -> lcb
RCB -> rcb
INT -> int
INT -> INT IN VAR
INT -> INT IN LIST
INT -> INT IN DICT
VAR -> var
NEWLINE -> newline
TYPE -> type
ARROW -> arrow
FORMAT -> format
S -> ENTER S
S -> S ENTER
S -> ENTER
S -> IMPORT_STMT
S -> IMPORT_STMT ENTER S
S -> IMPORT_STMT ENTER SS
S -> SS
SS -> PART SS
PART -> CLASS_STMT
PART -> FUNC_STMT
PART -> FOR_STMT
PART -> IF_STMT
PART -> WHILE_STMT
PART -> SENTENCE
SS -> CLASS_STMT
SS -> FUNC_STMT
SS -> FOR_STMT
SS -> IF_STMT
SS -> WHILE_STMT
SS -> SENTENCE
SENTENCE -> FUNCTION
SENTENCE -> FUNC_STMT
SENTENCE -> ASSIGN
SENTENCE -> METHOD_STMT
SENTENCE -> WITH_STATE
SENTENCE -> IF_BLOCK
SENTENCE -> FOR_STMT
SENTENCE -> STATIC
SENTENCE -> RETURN
SENTENCE -> CONTINUE
SENTENCE -> BREAK
SENTENCE -> RAISE
SENTENCE -> ENTER SENTENCE
SENTENCE -> SENTENCE ENTER SENTENCE
SENTENCE -> SENTENCE ENTER
STRING -> string
STRING -> STRING IN STRING
STRING -> STRING IN VAR
STRING -> STRING IN LIST
STRING -> STRING IN DICT
STRING -> multiline
STRINGFORMAT -> STRING DOT FORMAT LB ARIT_OP RB
STRINGFORMAT -> STRING DOT FORMAT LB VAR RB
DICT -> LCB RCB
DICT -> LCB PARAMDICT RCB
PARAMDICT -> PARAMDICT COMMA PARAMDICT
PARAMDICT -> STATIC COLON STATIC
LIST -> LSB RSB
LIST -> LSB PARAM RSB
LIST -> LSB VAR FOR PARAM IN VAR RSB
LIST -> LSB VAR FOR PARAM IN RANGE_STMT RSB
LIST -> LSB ARIT_OP FOR PARAM IN VAR RSB 
LIST -> LSB ARIT_OP FOR PARAM IN RANGE_STMT RSB
ARIT_OP -> VAR ARIT_OPERATOR ARIT_OP
ARIT_OP -> STATIC ARIT_OPERATOR ARIT_OP
ARIT_OP -> VAR ARIT_OPERATOR VAR
ARIT_OP -> STATIC ARIT_OPERATOR VAR
ARIT_OP -> VAR ARIT_OPERATOR STATIC
ARIT_OP -> STATIC ARIT_OPERATOR STATIC
ARIT_OP -> LB ARIT_OP RB
ARIT_OPERATOR -> ADD
ARIT_OPERATOR -> SUBTR
ARIT_OPERATOR -> MUL
ARIT_OPERATOR -> DIV
LOGI_VAR -> FUNCTION
LOGI_VAR -> METHOD_STMT
LOGI_VAR -> VARINT
LOGI_VAR -> NOT VARINT
LOGI_VAR -> BOOL
LOGI_VAR -> NOT LOGI_VAR
LOGI_VAR -> LB LOGI_VAR RB 
LOGI_VAR -> DICT 
LOGI_VAR -> LIST 
BOOL -> NOT BOOL
LOGI_OP -> LOGI_VAR LOGI_OPERATOR LOGI_OP
LOGI_OP -> LOGI_VAR LOGI_OPERATOR LOGI_VAR
LOGI_OP -> LB LOGI_OP RB
LOGI_OPERATOR -> ISEQ
LOGI_OPERATOR -> LE
LOGI_OPERATOR -> L
LOGI_OPERATOR -> GE
LOGI_OPERATOR -> G
LOGI_OPERATOR -> NEQ
LOGI_OPERATOR -> AND
LOGI_OPERATOR -> OR
WITH_STATE -> WITH VAR LB PARAMFUNGSI RB AS VAR COLON ENTER SENTENCE 
PARAM -> ALL
PARAM -> PARAM COMMA PARAM
PARAM -> ARIT_OP
PARAM -> LOGI_OP
PARAM -> METHOD_STMT
VAR_FUNC -> VAR
VAR_FUNC -> STRING
VAR_FUNC -> VAR COLON TYPE
PARAMFUNGSI -> VAR_FUNC EQUAL STATIC
PARAMFUNGSI -> VAR_FUNC
PARAMFUNGSI -> VAR_FUNC COMMA PARAMFUNGSI
PARAMFUNGSI -> VAR_FUNC EQUAL STATIC COMMA PARAMFUNGSI
STATIC -> INT
STATIC -> STRING
STATIC -> BOOL
STATIC -> LIST
STATIC -> NONE
STATIC -> DICT
STATIC -> LB INT RB
STATIC -> LB STRING RB
STATIC -> LB BOOL RB
STATIC -> LB LIST RB
STATIC -> LOGI_OP
METHOD_STMT -> VAR LSB VARINT RSB DOT VAR
METHOD_STMT -> VAR LSB VARINT RSB DOT FUNCTION
METHOD_STMT -> DOTBETWEEN LB RB
METHOD_STMT -> DOTBETWEEN LB PARAM RB
METHOD_STMT -> DOTBETWEEN LB PARAMFUNGSI RB
IF_STMT -> IF FUNCTION COLON ENTER SENTENCE
IF_STMT -> IF STATIC COLON ENTER SENTENCE
IF_STMT -> IF LB STATIC RB COLON ENTER SENTENCE
IF_STMT -> IF LB ALL RB COLON ENTER SENTENCE
IF_STMT -> IF METHOD_STMT COLON ENTER SENTENCE
IF_STMT -> IF LOGI_OP COLON ENTER SENTENCE
IF_STMT -> IF VAR IN VAR COLON ENTER SENTENCE
ELIF_STMT -> ELIF LOGI_OP COLON ENTER SENTENCE
ELIF_STMT -> ELIF VAR IN VAR COLON ENTER SENTENCE
ELSE_STMT -> ELSE COLON ENTER SENTENCE
ELIF_BANYAK -> ELIF_STMT
ELIF_BANYAK -> ELIF_STMT ELIF_BANYAK
IF_BLOCK -> IF_STMT 
IF_BLOCK -> IF_STMT ELIF_BANYAK
IF_BLOCK -> IF_STMT ELIF_BANYAK ELSE_STMT
IF_BLOCK -> IF_STMT ELSE_STMT
ARRAY -> VAR LIST
ASSIGN -> PARAM ASSIGN_OP ASSIGNMENT
ASSIGN -> VARINT ASSIGN_OP ASSIGNMENT
ASSIGN -> DOTBETWEEN ASSIGN_OP ASSIGNMENT
ASSIGN -> ARRAY ASSIGN_OP ASSIGNMENT
ASSIGN -> ASSIGNMENT
ASSIGN_OP -> EQUAL
ASSIGN_OP -> SUBTREQ
ASSIGN_OP -> MULEQ
ASSIGN_OP -> SUMEQ
ASSIGN_OP -> DIVEQ
OPERATION -> ARIT_OP
OPERATION -> LOGI_OP
OPERATION -> OPERATION ENTER
ASSIGNMENT -> DOTBETWEEN
ASSIGNMENT -> OPERATION
ASSIGNMENT -> VAR
ASSIGNMENT -> INT
ASSIGNMENT -> STRING
ASSIGNMENT -> FUNCTION
ASSIGNMENT -> ARRAY
ASSIGNMENT -> LIST
ASSIGNMENT -> METHOD_STMT
ASSIGNMENT -> DICT
ASSIGNMENT -> ASSIGN_STMT
FUNC_STMT -> DEF VAR LB PARAMFUNGSI RB COLON ENTER FUNC_SENTENCE
FUNC_STMT -> DEF VAR LB PARAMFUNGSI RB ARROW TYPE COLON ENTER FUNC_SENTENCE
FUNC_STMT -> DEF VAR LB RB COLON ENTER FUNC_SENTENCE
FUNC_STMT -> DEF VAR LB RB ARROW TYPE COLON ENTER FUNC_SENTENCE
FUNC_STMT -> VAR LB RB
FUNC_STMT -> VAR LB FUNC_STMT RB
FUNC_STMT -> TYPE LB RB
FUNC_STMT -> TYPE LB FUNC_STMT RB
ASSIGN_STMT -> VAR LB RB
ASSIGN_STMT -> VAR LB ASSIGN_STMT RB
ASSIGN_STMT -> TYPE LB RB
ASSIGN_STMT -> TYPE LB ASSIGN_STMT RB
FUNC_SENTENCE -> SENTENCE
FUNC_SENTENCE -> IF_BLOCK_FUNC
FUNC_SENTENCE -> RETURN STATIC
FUNC_SENTENCE -> PASS
FUNC_SENTENCE -> FUNC_SENTENCE RETURN STATIC
FUNC_SENTENCE -> SENTENCE FUNC_SENTENCE
IF_STMT_FUNC -> IF FUNCTION COLON RETURN STATIC
IF_STMT_FUNC -> IF FUNCTION COLON FUNC_SENTENCE
IF_STMT_FUNC -> IF METHOD_STMT COLON FUNC_SENTENCE
IF_STMT_FUNC -> IF LOGI_OP COLON FUNC_SENTENCE
IF_STMT_FUNC -> IF VAR IN VAR COLON FUNC_SENTENCE
IF_STMT_FUNC -> IF STATIC COLON ENTER FUNC_SENTENCE
IF_STMT_FUNC -> IF METHOD_STMT COLON ENTER FUNC_SENTENCE
IF_STMT_FUNC -> IF LOGI_OP COLON ENTER FUNC_SENTENCE
IF_STMT_FUNC -> IF VAR IN VAR COLON ENTER FUNC_SENTENCE
ELIF_STMT_FUNC -> ELIF LOGI_OP COLON FUNC_SENTENCE
ELIF_STMT_FUNC -> ELIF VAR IN VAR COLON FUNC_SENTENCE
ELSE_STMT_FUNC -> ELSE COLON FUNC_SENTENCE
ELIF_BANYAK_FUNC -> ELIF_STMT_FUNC
ELIF_BANYAK_FUNC -> ELIF_STMT_FUNC ELIF_BANYAK_FUNC
IF_BLOCK_FUNC -> IF_STMT_FUNC 
IF_BLOCK_FUNC -> IF_STMT_FUNC ELIF_BANYAK_FUNC
IF_BLOCK_FUNC -> IF_STMT_FUNC ELIF_BANYAK_FUNC ELSE_STMT_FUNC
IF_BLOCK_FUNC -> IF_STMT_FUNC ELSE_STMT_FUNC
FUNCTION -> VAR LB RB
FUNCTION -> VAR LB PARAM RB
FUNCTION -> VAR LB PARAMFUNGSI RB
CLASS_STMT -> CLASS VAR COLON ENTER CLASS_SENTENCE
CLASS_SENTENCE -> SENTENCE
CLASS_SENTENCE -> FUNC_STMT
CLASS_SENTENCE -> PASS
WHILE_STMT -> WHILE LOGI_OP COLON ENTER LOOP_SENTENCE
WHILE_STMT -> WHILE VARINT COLON ENTER LOOP_SENTENCE
FOR_STMT -> FOR VAR IN VAR COLON ENTER LOOP_SENTENCE
FOR_STMT -> FOR VAR IN STRING COLON ENTER LOOP_SENTENCE
FOR_STMT -> FOR VAR IN LIST COLON ENTER LOOP_SENTENCE
FOR_STMT -> FOR VAR IN RANGE LB PARAM RB COLON ENTER LOOP_SENTENCE
LOOP_SENTENCE -> SENTENCE
LOOP_SENTENCE -> LOOP_SENTENCE ENTER LOOP_SENTENCE
LOOP_SENTENCE -> BREAK
LOOP_SENTENCE -> CONTINUE
IMPORT_STMT -> IMPORT VAR AS VAR
IMPORT_STMT -> FROM VAR IMPORT VAR
IMPORT_STMT -> IMPORT VAR
RANGE_STMT -> RANGE LB VARINT RB
RANGE_STMT -> RANGE LB VARINT COMMA VARINT RB
RANGE_STMT -> RANGE LB VARINT COLON VARINT COLON VARINT RB
ENTER -> NEWLINE ENTER
ENTER -> NEWLINE
VAR -> LB VAR RB
VAR -> VAR COMMA VAR
VARINT -> VAR
VARINT -> INT
VARINT -> BOOL
ALL -> VARINT
ALL -> BOOL
ALL -> STRING
BOOL -> TRUE
BOOL -> FALSE
BOOL -> IS