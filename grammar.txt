S -> HEAD BODY
HEAD -> EXPORT_STMT
HEAD -> IMPORT_STMT
HEAD -> EXPORT_DEFAULT_STMT
HEAD -> HEAD HEAD
EXPORT_STMT -> EXPORT ASSIGNMENT TK
EXPORT_STMT -> EXPORT FUNCTION FUNCTION_CALL TK
EXPORT_STMT -> EXPORT LIST_STMT TK
EXPORT_STMT -> EXPORT MUL TK
EXPORT_STMT -> EXPORT ASSIGNMENT AS ID TK
EXPORT_STMT -> EXPORT FUNCTION FUNCTION_CALL AS ID TK
EXPORT_STMT -> EXPORT LIST_STMT AS ID TK
EXPORT_STMT -> EXPORT MUL AS ID TK
EXPORT_STMT -> EXPORT ASSIGNMENT FROM ID TK
EXPORT_STMT -> EXPORT FUNCTION FUNCTION_CALL FROM ID TK
EXPORT_STMT -> EXPORT LIST_STMT FROM ID TK
EXPORT_STMT -> EXPORT MUL AS ID FROM ID TK
EXPORT_STMT -> EXPORT ASSIGNMENT AS ID FROM ID TK
EXPORT_STMT -> EXPORT FUNCTION FUNCTION_CALL AS ID FROM ID TK
EXPORT_STMT -> EXPORT LIST_STMT AS ID FROM ID TK
EXPORT_STMT -> EXPORT MUL AS ID FROM ID TK
EXPORT_DEFAULT_STMT -> EXPORT DEFAULT ID TK
EXPORT_DEFAULT_STMT -> EXPORT DEFAULT ASSIGNMENT TK
EXPORT_DEFAULT_STMT -> EXPORT DEFAULT FUNCTION FUNCTION_CALL TK
EXPORT_DEFAULT_STMT -> EXPORT DEFAULT LIST_STMT TK
EXPORT_DEFAULT_STMT -> EXPORT DEFAULT MUL TK
EXPORT -> export
FROM -> from
IMPORT_STMT -> IMPORT ID TK
IMPORT_STMT -> IMPORT ASSIGNMENT TK
IMPORT_STMT -> IMPORT FUNCTION FUNCTION_CALL TK
IMPORT_STMT -> IMPORT LIST_STMT TK
IMPORT_STMT -> IMPORT MUL TK
IMPORT_STMT -> IMPORT ID AS ID TK
IMPORT_STMT -> IMPORT ASSIGNMENT AS ID TK
IMPORT_STMT -> IMPORT FUNCTION FUNCTION_CALL AS ID TK
IMPORT_STMT -> IMPORT LIST_STMT AS ID TK
IMPORT_STMT -> IMPORT MUL AS ID TK
IMPORT_STMT -> IMPORT ID FROM ID TK
IMPORT_STMT -> IMPORT ASSIGNMENT FROM ID TK
IMPORT_STMT -> IMPORT FUNCTION FUNCTION_CALL FROM ID TK
IMPORT_STMT -> IMPORT LIST_STMT FROM ID TK
IMPORT_STMT -> IMPORT ID AS ID FROM ID TK
IMPORT_STMT -> IMPORT ASSIGNMENT AS ID FROM ID TK
IMPORT_STMT -> IMPORT FUNCTION FUNCTION_CALL AS ID FROM ID TK
IMPORT_STMT -> IMPORT LIST_STMT AS ID FROM ID TK
IMPORT_STMT -> IMPORT MUL AS ID FROM ID TK
IMPORT -> import
BOOL -> TRUE
BOOL -> FALSE
TRUE -> true
FALSE -> false
BODY -> TYPEOF_STMT
BODY -> TYPE
BODY -> FUNCTION_STMT
BODY -> IF_STMT
BODY -> WHILE_STMT
BODY -> FOR_STMT
BODY -> SWITCH_STMT
BODY -> TRY_STMT
BODY -> FUNCTION_CALL
BODY -> FOR_STMT
BODY -> THROW_STMT
BODY -> BODY BODY
BODY -> DELETE_STMT
BODY -> INSTANCEOF_STMT
DELETE_STMT -> DELETE STR TK STR
DELETE -> delete
INSTANCEOF_STMT -> ID INSTANCEOF ID
INSTANCEOF -> instanceof
TYPEOF_STMT -> TYPEOF VALUE
TYPEOF -> typeof
TYPE -> CONST
TYPE -> LET
TYPE -> VAR
ASSIGNMENT -> TYPE ASSIGN
ASSIGN -> ID
ASSIGN -> ID IS VALUE
ASSIGN -> ARRAY_STMT IS FUNCTION_CALL
ASSIGN -> ARRAY_STMT IS VALUE
ASSIGN -> LIST_STMT IS VALUE
VALUE -> EXPR
VALUE -> BOOL
VALUE -> STR
VALUE -> NUM
VALUE -> NULL
VALUE -> NONE
VALUE -> INFINITY
VALUE -> FUNCTION_CALL
VALUE -> ARRAY_STMT
VALUE -> LIST_STMT
VALUE -> OBJ_STMT
TYPE -> type
LET -> let
VAR -> var
CONST -> const
UNIOP -> LOGOP
UNIOP -> OP
EXPR -> EXPR UNIOP EXPR
EXPR -> ID
EXPR -> LOGOPN VALUE
NUM -> number
STR -> string
BOOL -> bool
NULL -> null
NONE -> none
INFINITY -> infinity
IF_STMT -> IF KBKI EXPR KBKA KKKI BODY KKKA
IF_STMT -> IF KBKI EXPR KBKA KKKI BODY KKKA ELSE_STMT
IF_STMT -> IF KBKI EXPR KBKA KKKI BODY KKKA ELSEIF_STMT
IF_STMT -> IF KBKI EXPR KBKA KKKI BODY KKKA ELSEIF_STMT ELSE_STMT
IF_STMT -> IF KBKI EXPR KBKA KKKI KKKA
IF_STMT -> IF KBKI EXPR KBKA KKKI KKKA ELSE_STMT
IF_STMT -> IF KBKI EXPR KBKA KKKI KKKA ELSEIF_STMT
IF_STMT -> IF KBKI EXPR KBKA KKKI KKKA ELSEIF_STMT ELSE_STMT
ELSE_STMT -> ELSE KKKI BODY KKKA
ELSE_STMT -> ELSE KKKI KKKA
ELSEIF_STMT -> ELSE IF KBKI EXPR KBKA KKKI KKKA
ELSEIF_STMT -> ELSE IF KBKI EXPR KBKA KKKI BODY KKKA
IF -> if
ELSE -> else
LOGOP -> THREEEQ
LOGOP -> TWOEQ
LOGOP -> NEQTWO
LOGOP -> NEQTHREE
LOGOP -> GT
LOGOP -> LT
LOGOP -> LTE
LOGOP -> GTE
LOGOP -> AND
LOGOP -> OR
LOGOPN -> NOTB
LOGOP -> QB
THREEEQ -> isstricteq
TWOEQ -> iseq
NEQTWO -> isneq
NEQTHREE -> notstricteq
GT -> g
LT -> l
LTE -> leq
GTE -> geq
AND -> and
OR -> or
NOTB -> notb
QB -> qb
OP -> POW
OP -> PEQ
OP -> MEQ
OP -> INC
OP -> DEC
OP -> XOR
OP -> ANDB
OP -> ORB
OP -> IS
OP -> SUM
OP -> SUB
OP -> MUL
OP -> DIV
OP -> MOD
OP -> AS
OP -> IN
POW -> pow
PEQ -> peq
MEQ -> meq
INC -> inc
DEC -> dec
XOR -> xor
ANDB -> andb
ORB -> orb
IS -> is
SUM -> sum
SUB -> sub
MUL -> mul
DIV -> div
MOD -> mod
AS -> as
IN -> in 
FUNCTION_STMT -> FUNCTION FUNC_NAME KBKI FUNC_PARAM KBKA KKKI BODY RETURN_STMT KKKA
FUNCTION_STMT -> FUNCTION FUNC_NAME KBKI KBKA BODY RETURN_STMT KKKA
FUNCTION_STMT -> FUNCTION FUNC_NAME KBKI FUNC_PARAM KBKA KKKI RETURN_STMT KKKA
FUNCTION_STMT -> FUNCTION FUNC_NAME KBKI KBKA KKKI RETURN_STMT KKKA
FUNCTION_STMT -> FUNCTION FUNC_NAME KBKI FUNC_PARAM KBKA KKKI BODY KKKA
FUNCTION_STMT -> FUNCTION FUNC_NAME KBKI KKKI BODY KKKA
FUNCTION_STMT -> FUNCTION FUNC_NAME KBKI FUNC_PARAM KBKA KKKI KKKA
FUNCTION_STMT -> FUNCTION FUNC_NAME KBKI KKKI KKKA
RETURN_STMT -> RETURN VALUE TK
FUNC_PARAM -> VARIOUS_VAL
FUNCTION_CALL -> FUNC_NAME KBKI FUNC_PARAM KBKA TK
FUNCTION_CALL -> FUNC_NAME KBKI KBKA TK
FUNCTION -> function
RETURN -> return
ARRAY_STMT -> KSKI VARIOUS_VAL KSKA
LIST_STMT -> KKKI VARIOUS_VAL KKKA
OBJ_STMT -> KKKI OBJ_VAL KKKA
OBJ_VAL -> OBJ_VAL KM OBJ_VAL
OBJ_VAL -> OBJ_EXPR
OBJ_EXPR -> ID TD VALUE
VARIOUS_VAL -> VARIOUS_VAL KM VARIOUS_VAL
VARIOUS_VAL -> VALUE
VARIOUS_VAL -> EXPR
WHILE_STMT -> WHILE KBKI WHILE_PARAM KBKA KKKI LOOP_BODY KKKA
WHILE_PARAM -> EXPR
WHILE_PARAM -> VALUE
WHILE -> while
LOOP_BODY ->  BODY BREAK_STMT
LOOP_BODY -> BREAK_STMT BODY
LOOP_BODY -> BODY BREAK_STMT BODY
LOOP_BODY -> BODY CONTINUE_STMT
LOOP_BODY -> CONTINUE_STMT BODY
LOOP_BODY -> BODY CONTINUE_STMT BODY
LOOP_BODY -> BODY
BREAK_STMT -> BREAK TK
BREAK -> break
CONTINUE_STMT -> CONTINUE TK
CONTINUE -> continue
FOR_STMT -> FOR KBKI FOR_PARAM KBKA KKKI LOOP_BODY KKKA
FOR_PARAM -> TYPE_FOR TK EXPR_FOR TK INDECRE
FOR_PARAM -> TYPE_FOR TK TK INDECRE
FOR_PARAM -> TYPE_FOR TK EXPR_FOR TK
FOR_PARAM -> TYPE_FOR TK TK
TYPE_FOR -> LET ID IS NUM
TYPE_FOR -> ID IS NUM
EXPR_FOR -> ID LOGOP VALUE
EXPR_FOR -> ID LOGOP EXPR
INDECRE -> ID INC
INDECRE -> ID DEC
FOR -> for
SWITCH_STMT -> SWITCH KBKI SWITCH_PARAM KBKA KKKI SWITCH_BODY DEFAULT_STMT KKKA
SWITCH_STMT -> SWITCH KBKI SWITCH_PARAM KBKA KKKI SWITCH_BODY KKKA
SWITCH_STMT -> SWITCH KBKI SWITCH_PARAM KBKA KKKI KKKA
SWITCH_BODY -> SWITCH_BODY SWITCH_BODY
SWITCH_BODY -> CASE_STMT TD CASE_BODY
CASE_STMT -> CASE EXPR TK
CASE_BODY -> BODY BREAK_STMT
CASE_BODY -> BODY
DEFAULT_STMT -> DEFAULT TD BODY TK
SWITCH -> switch
CASE -> case
DEFAULT -> default
TRY_STMT -> TRY KBKI KBKA KKKI TRY_BODY KKKA CATCH KBKI CATCH_PARAM KBKA KKKI CATCH_BODY KKKA FINALLY KKKI FINALLY_BODY KKKA
TRY_STMT -> TRY KBKI KBKA KKKI TRY_BODY KKKA CATCH KBKI CATCH_PARAM KBKA KKKI CATCH_BODY KKKA
TRY_BODY -> BODY
CATCH_PARAM -> EXPR
CATCH_BODY -> BODY
FINALLY_BODY -> BODY
TRY -> try
CATCH -> catch
FINALLY -> finally
THROW_STMT -> THROW NEW FUNCTION_CALL TK
THROW_STMT -> THROW FUNCTION_CALL TK
THROW_STMT -> THROW NEW EXPR
THROW_STMT -> THROW EXPR
THROW -> throw
KBKA -> kbka
KBKI -> kbki
KKKI -> kkki
KKKA -> kkka
TD -> td
TK -> tk
KSKI -> kski
KSKA -> kska
KM -> km
ID -> id
